CREATE TABLE UM_USERS (ID VARCHAR(255), USER_NAME VARCHAR(255) NOT NULL, PASSWORD VARCHAR(255) NOT NULL, PRIMARY KEY (ID), UNIQUE(USER_NAME));
CREATE TABLE UM_USER_ATTRIBUTES (ID VARCHAR(255), ATTR_NAME VARCHAR(255) NOT NULL, ATTR_VALUE VARCHAR(255), USER_ID VARCHAR(255), FOREIGN KEY (USER_ID) REFERENCES UM_USERS(ID) ON DELETE CASCADE, PRIMARY KEY (ID));
CREATE TABLE UM_ROLES (ID VARCHAR(255), ROLE_NAME VARCHAR(255) NOT NULL, PRIMARY KEY (ID), UNIQUE(ROLE_NAME));
CREATE TABLE UM_ROLE_ATTRIBUTES (ID VARCHAR(255), ATTR_NAME VARCHAR(255) NOT NULL, ATTR_VALUE VARCHAR(255), ROLE_ID VARCHAR(255), FOREIGN KEY (ROLE_ID) REFERENCES UM_ROLES(ID) ON DELETE CASCADE, PRIMARY KEY (ID));
CREATE TABLE UM_PERMISSIONS (ID VARCHAR(255), RESOURCE_ID VARCHAR(255) NOT NULL, ACTION VARCHAR(255) NOT NULL, PRIMARY KEY (ID));
CREATE TABLE UM_ROLE_PERMISSIONS (ID VARCHAR(255), PERMISSION_ID VARCHAR(255) NOT NULL, ROLE_ID VARCHAR(255) NOT NULL, IS_ALLOWED SMALLINT NOT NULL, UNIQUE (PERMISSION_ID, ROLE_ID), FOREIGN KEY (PERMISSION_ID) REFERENCES UM_PERMISSIONS(ID) ON DELETE  CASCADE, FOREIGN KEY (ROLE_ID) REFERENCES UM_ROLES(ID) ON DELETE CASCADE, PRIMARY KEY (ID));
CREATE TABLE UM_USER_PERMISSIONS (ID VARCHAR(255), PERMISSION_ID VARCHAR(255) NOT NULL, USER_ID VARCHAR(255) NOT NULL, IS_ALLOWED SMALLINT NOT NULL, UNIQUE (PERMISSION_ID, USER_ID), FOREIGN KEY (PERMISSION_ID) REFERENCES UM_PERMISSIONS(ID) ON DELETE CASCADE, FOREIGN KEY (USER_ID) REFERENCES UM_USERS(ID) ON DELETE CASCADE, PRIMARY KEY (ID));
CREATE TABLE UM_USER_ROLES (ID VARCHAR(255), ROLE_ID VARCHAR(255) NOT NULL, USER_ID VARCHAR(255) NOT NULL, UNIQUE (USER_ID, ROLE_ID), FOREIGN KEY (ROLE_ID) REFERENCES UM_ROLES(ID) ON DELETE CASCADE, FOREIGN KEY (USER_ID) REFERENCES UM_USERS(ID) ON DELETE CASCADE, PRIMARY KEY (ID));
CREATE TABLE USER_PROFILE (ID VARCHAR(255), USER_ID VARCHAR(255), PROFILE_NAME VARCHAR(255), IS_DEFAULT SMALLINT, FOREIGN KEY (USER_ID) REFERENCES UM_USERS(ID) ON DELETE CASCADE, PRIMARY KEY (ID));
CREATE TABLE PROFILE_ATTRIBUTES (ID VARCHAR(255), USER_PROFILE_ID VARCHAR(255), ATTRIBUTE_NAME VARCHAR(255), ATTRIBUTE_VALUE VARCHAR(255), FOREIGN KEY (USER_PROFILE_ID) REFERENCES USER_PROFILE(ID) ON DELETE CASCADE, PRIMARY KEY (ID));