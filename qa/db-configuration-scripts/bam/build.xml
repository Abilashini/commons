<project name="DBconfiguration Automation" basedir="." default="help">

    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
    <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"/>
    <taskdef resource="net/sf/antcontrib/antlib.xml"/>

    <property name="database.name" value=""/>
    <property name="script" value=""/>
    <property name="dsfile.list" value="BAMConfigurationDS.dbs,BAMDataCollectionDS.dbs,BAMStatQueryDS.dbs,BAMSummaryGenerationDS.dbs,BAMSummaryQueryDS.dbs"/>
    <property name="database.list" value="oracle,mysql,mssql,derby,h2"/>
    <property name="conf.file.list" value="registry.xml,user-mgt.xml"/>


    <property name="bam.schema.location" value="/home/krishantha/svn/sql"/>


    <!--=============change carbon.home property to your product installation path=============-->

    <property name="carbon.home" value="/home/krishantha/Desktop/BAM/samisa-latest/wso2bam-1.0.0-beta001"/>

    <!--=============properies of oracle database configuration========================-->

    <property name="oracle.driver.location" value="/home/krishantha/oracle/product/10.2.0/db_1/jdbc/lib/ojdbc14.jar"/>
    <property name="oracle.userName" value="wso2"/>
    <property name="oracle.password" value="wso2"/>
    <property name="oracle.connection.url" value="jdbc:oracle:thin:@krishantha:1523:registry"/>
    <property name="oracle.dialet" value="oracle"/>
    <property name="oracle.driver.name" value="oracle.jdbc.driver.OracleDriver"/>

    <!--=============properies of mysql database configuration========================-->

    <property name="mysql.driver.location"
              value="/home/krishantha/Desktop/mysql-connector-java-5.1.5/mysql-connector-java-5.1.5-bin.jar"/>
    <property name="mysql.userName" value="wso2bam"/>
    <property name="mysql.password" value="wso2bam"/>
    <property name="mysql.connection.url" value="jdbc:mysql://localhost:3306/bamdb"/>
    <property name="mysql.dialet" value="mysql"/>
    <property name="mysql.driver.name" value="com.mysql.jdbc.Driver"/>

    <!--=============properies of mssql database configuration========================-->

    <property name="mssql.driver.location"
              value="/home/krishantha/Desktop/RegistryWithMSSQL/jtds-1.2.2-dist/jtds-1.2.2.jar"/>
    <property name="mssql.userName" value="sa"/>
    <property name="mssql.password" value="test"/>
    <property name="mssql.connection.url" value="jdbc:jtds:sqlserver://10.100.1.236:1433/krishantha1"/>
    <property name="mssql.dialet" value="sqlserver"/>
    <property name="mssql.driver.name" value="net.sourceforge.jtds.jdbc.Driver"/>

    <!--=============properies of derby database configuration========================-->

    <property name="derby.driver.location" value="/home/krishantha/derby/db-derby-10.4.1.3-bin/lib"/>
    <property name="derby.userName" value="me"/>
    <property name="derby.password" value="mine"/>
    <property name="derby.connection.url" value="jdbc:derby://localhost:1527/myDB1;create=true;user=me;password=mine"/>
    <property name="derby.dialet" value="derby"/>
    <property name="derby.driver.name" value="org.apache.derby.jdbc.ClientDriver"/>

    <!--=============properies of h2 database configuration========================-->

    <property name="h2.driver.location" value="/home/krishantha/h2/h2/bin/h2-1.1.106.jar"/>
    <property name="h2.userName" value="regadmin1"/>
    <property name="h2.password" value="regadmin1"/>
    <property name="h2.connection.url"
              value="jdbc:h2:tcp://localhost/~/registryDB99;create=true;user=regadmin1;password=regadmin1"/>
    <property name="h2.dialet" value="H2"/>
    <property name="h2.driver.name" value="org.h2.Driver"/>

    <!--==========================================================================-->

    <target name="check-cond">
        <condition property="option-ok">
            <istrue value="${script}"/>
        </condition>
    </target>

    <target name="check-os">
        <condition property="is.windows">
            <os family="windows"/>
        </condition>

        <condition property="is.unix">
            <os family="unix"/>
        </condition>
    </target>

    <!--copy files in conf directory to backup directory and relevant driver jar files to {carbon.home}/repository/components/lib -->

    <target name="copy-files">
        <echo message="copy driver files and backup conf directory"/>
        <copy todir="${carbon.home}/conf/back">
            <fileset dir="${carbon.home}/conf"/>
            <globmapper from="*.xml" to="*.bak"/>
        </copy>

        <if>
            <equals arg1="${database.name}" arg2="oracle"/>
            <then>
                <copy file="${oracle.driver.location}" todir="${carbon.home}/repository/components/lib"/>
            </then>
            <elseif>
                <equals arg1="${database.name}" arg2="mysql"/>
                <then>
                    <copy file="${mysql.driver.location}" todir="${carbon.home}/repository/components/lib"/>
                </then>
            </elseif>
            <elseif>
                <equals arg1="${database.name}" arg2="mssql"/>
                <then>
                    <copy file="${mssql.driver.location}" todir="${carbon.home}/repository/components/lib"/>
                </then>
            </elseif>
            <elseif>
                <equals arg1="${database.name}" arg2="derby"/>
                <then>
                    <copy file="${derby.driver.location}/derbynet.jar"
                          todir="${carbon.home}/repository/components/lib"/>
                    <copy file="${derby.driver.location}/derby.jar" todir="${carbon.home}/repository/components/lib"/>
                    <copy file="${derby.driver.location}/derbyclient.jar"
                          todir="${carbon.home}/repository/components/lib"/>
                </then>
            </elseif>
            <elseif>
                <equals arg1="${database.name}" arg2="h2"/>
                <then>
                    <copy file="${h2.driver.location}" todir="${carbon.home}/repository/components/lib"/>
                </then>
            </elseif>
        </if>
    </target>

    <target name="cond-if" depends="check-cond" if="option-ok">
        <echo message="yes"/>
    </target>

    <!--run database sql scripts-->

    <target if="option-ok" name="run-dbscripts" depends="check-cond,copy-files">
        <echo message="Executing ${database.name} database script files."/>

        <if>
            <equals arg1="${database.name}" arg2="oracle"/>
            <then>
                <sql
                        driver="${oracle.driver.name}"
                        url="${oracle.connection.url}"
                        userid="${oracle.userName}"
                        password="${oracle.password}"
                        delimiter="/"
                        src="${carbon.home}/dbscripts/oracle.sql"
                        print="yes"
                        output="outputfile-oracle.txt">

                    <classpath>
                        <pathelement location="${oracle.driver.location}"/>
                    </classpath>
                </sql>
            </then>
        </if>

        <if>
            <equals arg1="${database.name}" arg2="mysql"/>
            <then>
                <sql
                        driver="${mysql.driver.name}"
                        url="${mysql.connection.url}"
                        userid="${mysql.userName}"
                        password="${mysql.password}"
                        src="${carbon.home}/dbscripts/mysql.sql"
                        print="yes"
                        output="outputfile-mysql.txt">
                    <classpath>
                        <pathelement location="${mysql.driver.location}"/>
                    </classpath>
                </sql>
            </then>
        </if>

        <if>
            <equals arg1="${database.name}" arg2="mssql"/>
            <then>
                <sql
                        driver="${mssql.driver.name}"
                        url="${mssql.connection.url}"
                        userid="${mssql.userName}"
                        password="${mssql.password}"
                        src="${carbon.home}/dbscripts/mssql.sql"
                        print="yes"
                        output="outputfile-mssql.txt">
                    <classpath>
                        <pathelement location="${mssql.driver.location}"/>
                    </classpath>
                </sql>
            </then>
        </if>

        <if>
            <equals arg1="${database.name}" arg2="derby"/>
            <then>
                <sql
                        driver="${derby.driver.name}"
                        url="${derby.connection.url}"
                        userid="${derby.userName}"
                        password="${derby.password}"
                        src="${carbon.home}/dbscripts/derby.sql"
                        print="yes"
                        output="outputfile-derby.txt">
                    <classpath>
                        <pathelement location="${derby.driver.location}/derby.jar"/>
                        <pathelement location="${derby.driver.location}/derbyclient.jar"/>
                        <pathelement location="${derby.driver.location}/derbynet.jar"/>
                    </classpath>
                </sql>
            </then>
        </if>

        <if>
            <equals arg1="${database.name}" arg2="h2"/>
            <then>
                <sql
                        driver="${h2.driver.name}"
                        url="${h2.connection.url}"
                        userid="${h2.userName}"
                        password="${h2.password}"
                        src="${carbon.home}/dbscripts/h2.sql"
                        print="yes"
                        output="outputfile-h2.txt">
                    <classpath>
                        <pathelement location="${h2.driver.location}"/>
                    </classpath>
                </sql>
            </then>
        </if>
    </target>

    <target if="option-ok" name="run-dbscripts-bam" depends="check-cond,copy-files">
        <echo message="Executing ${database.name} database script files for bam."/>

        <for list="${database.list}" param="database">
            <sequential>
                <if>
                    <equals arg1="${database.name}" arg2="oracle"/>

                    <then>
                        <echo>Please run the BAM oracle script manually, This ant script doesn't support for running BAM oracle schema script
                        </echo>
                        <fail>Something wrong here.</fail>
                    </then>
                </if>

                <if>
                    <equals arg1="${database.name}" arg2="@{database}"/>

                    <then>
                        <sql
                                driver="${@{database}.driver.name}"
                                url="${@{database}.connection.url}"
                                userid="${@{database}.userName}"
                                password="${@{database}.password}"
                                src="${bam.schema.location}/bam_schema_@{database}.sql"
                                print="yes"
                                output="outputfile-{@{database}.txt">

                            <classpath>
                                <pathelement location="${@{database}.driver.location}"/>
                            </classpath>
                        </sql>
                    </then>
                </if>

            </sequential>
        </for>
    </target>


    <!--Edit registry.xml and user-mgt.xml files with database connections parameters-->

    <target name="registryXMLedit" depends="edit-ds-files,run-dbscripts,run-dbscripts-bam">
        <echo message="Edit database configurations to ${database.name}"/>

        <for list="${conf.file.list}" param="fileName">

            <sequential>
                <for list="${database.list}" param="database">
                    <sequential>
                        <if>
                            <equals arg1="${database.name}" arg2="@{database}"/>

                            <then>
                                <xmltask source="${carbon.home}/conf/registry.xml"
                                         dest="${carbon.home}/conf/registry.xml">
                                    <replace path="/wso2regsitry/dbConfig/url/text()"
                                             withText="${@{database}.connection.url}"/>
                                    <replace path="/wso2regsitry/dbConfig/userName/text()"
                                             withText="${@{database}.userName}"/>
                                    <replace path="/wso2regsitry/dbConfig/password/text()"
                                             withText="${@{database}.password}"/>
                                    <replace path="/wso2regsitry/dbConfig/driverName/text()"
                                             withText="${@{database}.driver.name}"/>
                                </xmltask>

                                <xmltask source="${carbon.home}/conf/user-mgt.xml"
                                         dest="${carbon.home}/conf/user-mgt.xml">
                                    <replace path="/UserManager/Database/URL/text()"
                                             withText="${@{database}.connection.url}"/>
                                    <replace path="/UserManager/Database/UserName/text()"
                                             withText="${@{database}.userName}"/>
                                    <replace path="/UserManager/Database/Password/text()"
                                             withText="${@{database}.password}"/>
                                    <replace path="/UserManager/Database/Dialect/text()"
                                             withText="${@{database}.dialet}"/>
                                    <replace path="/UserManager/Database/Driver/text()"
                                             withText="${@{database}.driver.name}"/>
                                </xmltask>
                            </then>
                        </if>
                    </sequential>
                </for>
            </sequential>
        </for>
    </target>

    <!--help menu-->

    <target name="help">
        <echo message="Usage:       ant [command] [system-properties]            "/>
        <echo message="                                        "/>
        <echo message="command:                                            "/>
        <echo message="startServerUnix          :Start the sever on Linux"/>
        <echo message="startServerWindows       :Start the sever on Windows"/>
        <echo message="startServer              :Start server without configuring databases"/>
        <echo message="                                                     "/>
        <echo message="system-properties:                                   "/>
        <echo message="-Dscript                 Option to run though script or -Dsetup option, set 'true' for script execution and 'false' to run with -Dsetup"/>
        <echo message="-Ddatabase.name          Name of the database, available options are oracle, h2, mysql, mssql, derby"/>
        <echo message="                                        "/>
        <echo message="Example:                                 "/>
        <echo message="ant startServerUnix -Dscript=true -Ddatabase.name=mysql [Unix]"/>
        <echo message="ant startServerWindows -Dscript=false -Ddatabase.name=oracle [Windows]"/>
        <echo message="                                        "/>
    </target>

    <!--start server on Linux-->

    <target name="startServerUnix" if="is.unix" depends="check-os">
        <antcall target="registryXMLedit"></antcall>
        <echo message="Starting server on Linux with ${database.name}"/>
        <if>
            <equals arg1="${script}" arg2="true"/>
            <then>
                <exec dir="${carbon.home}/bin" executable="sh" os="Linux" failonerror="false">
                    <arg line="wso2server.sh"/>
                </exec>
            </then>
            <elseif>
                <equals arg1="${script}" arg2="false"/>
                <then>
                    <exec dir="${carbon.home}/bin" executable="sh" os="Linux" failonerror="false">
                        <arg line="wso2server.sh -Dsetup"/>
                    </exec>
                </then>
            </elseif>
            <elseif>
                <equals arg1="${script}" arg2="normal"/>
                <then>
                    <exec dir="${carbon.home}/bin" executable="sh" os="Linux" failonerror="false">
                        <arg line="wso2server.sh"/>
                    </exec>
                </then>
            </elseif>
        </if>
    </target>

    <!--start the server without any options-->

    <target name="startServer" depends="check-os">
        <if>
            <equals arg1="${is.unix}" arg2="true"/>
            <then>
                <exec dir="${carbon.home}/bin" executable="sh" os="Linux" failonerror="false">
                    <arg line="wso2server.sh"/>
                </exec>
            </then>
            <elseif>
                <equals arg1="${is.windows}" arg2="true"/>
                <then>

                    <exec dir="${carbon.home}/bin" executable="cmd" failonerror="false">
                        <arg value="/c"/>
                        <arg line="wso2server.bat"/>
                    </exec>
                </then>
            </elseif>
        </if>
    </target>

    <!--start the server on windows-->

    <target name="startServerWindows" if="is.windows" depends="check-os">
        <antcall target="registryXMLedit"></antcall>
        <if>
            <equals arg1="${script}" arg2="true"/>
            <then>
                <exec dir="${carbon.home}/bin" executable="cmd" failonerror="false">
                    <arg value="/c"/>
                    <arg line="wso2server.bat"/>
                </exec>
            </then>
            <elseif>
                <equals arg1="${script}" arg2="false"/>
                <then>
                    <exec dir="${carbon.home}/bin" executable="cmd" failonerror="false">
                        <arg value="/c"/>
                        <arg line="wso2server.bat -Dsetup"/>
                    </exec>
                </then>
            </elseif>
        </if>
    </target>

    <target name="do-windows" depends="check-os" if="is.windows">
        <echo message="This is Windows"/>
        <echo message="${is.windows}"/>

    </target>

    <target name="do-unix" depends="check-os" if="is.unix">
        <echo message="This is Unix"/>
        <echo message="${is.unix}"/>
    </target>


    <target name="edit-ds-files">
        <echo message="Editing Data service Files"/>
        <for list="${dsfile.list}" param="fileName">
            <sequential>
                <for list="${database.list}" param="database">
                    <sequential>
                        <if>
                            <equals arg1="${database.name}" arg2="@{database}"/>
                            <then>
                                <property name="userName" value="@{database}.userName"/>
                                <xmltask source="${carbon.home}/repository/dataservices/@{fileName}"
                                         dest="${carbon.home}/repository/dataservices/@{fileName}">
                                    <replace path="/data/config/property[@name='org.wso2.ws.dataservice.driver']/text()"
                                             withText="${@{database}.driver.name}"/>
                                    <replace
                                            path="/data/config/property[@name='org.wso2.ws.dataservice.protocol']/text()"
                                            withText="${@{database}.connection.url}"/>
                                    <replace path="/data/config/property[@name='org.wso2.ws.dataservice.user']/text()"
                                             withText="${@{database}.userName}"/>
                                    <replace
                                            path="/data/config/property[@name='org.wso2.ws.dataservice.password']/text()"
                                            withText="${@{database}.password}"/>
                                </xmltask>
                            </then>
                        </if>
                    </sequential>
                </for>
            </sequential>
        </for>
    </target>

</project>
