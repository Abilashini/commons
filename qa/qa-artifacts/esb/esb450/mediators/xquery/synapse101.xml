<!--This is to test whether the target attribute of xquery mediator works correctly. Use the same CustomQuote request message given in sample391 -->
<!-- CustomQuoteRequest -->
 <!--  <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
      <soapenv:Header xmlns:wsa="http://www.w3.org/2005/08/addressing">
         <wsa:To>http://localhost:8281/services/StockQuoteProxy</wsa:To>
         <wsa:Action>urn:getQuote</wsa:Action>
      </soapenv:Header>
      <soapenv:Body>
         <m0:CheckPriceRequest xmlns:m0="http://services.samples">
            <m0:Code>IBM</m0:Code>
         </m0:CheckPriceRequest>
      </soapenv:Body>
   </soapenv:Envelope> -->


<?xml version="1.0" encoding="UTF-8"?><definitions xmlns="http://ws.apache.org/ns/synapse">
    <registry provider="org.apache.synapse.registry.url.SimpleURLRegistry">
        <parameter name="root">file:repository/samples/resources/</parameter>
        <parameter name="cachableDuration">15000</parameter>
    </registry> 
<proxy name="StockQuoteProxy" transports="https http" startOnLoad="true" trace="disable">
        <description/>
        <target>
            <inSequence>
                <property name="body" expression="$body/child::*[position()=1]"/>
                <xquery xmlns:m0="http://services.samples" key="xquery-req" target="//m0:CheckPriceRequest">
                    <variable name="payload" type="ELEMENT"/>
                </xquery>
                <send>
                    <endpoint>
                        <address uri="http://localhost:9001/services/SimpleStockQuoteService"/>
                    </endpoint>
                </send>
            </inSequence>
            <outSequence>
                <out>
                    <xquery key="xquery-response">
                        <variable name="payload" type="ELEMENT"/>
                        <variable xmlns:ax21="http://services.samples/xsd" xmlns:m0="http://services.samples" name="code" expression="self::node()//m0:return/ax21:symbol/child::text()" type="STRING"/>
                        <variable xmlns:ax21="http://services.samples/xsd" xmlns:m0="http://services.samples" name="price" expression="self::node()//m0:return/ax21:last/child::text()" type="DOUBLE"/>
                    </xquery>
                    <send/>
                </out>
            </outSequence>
        </target>
        <publishWSDL uri="file:repository/samples/resources/proxy/sample_proxy_1.wsdl"/>
    </proxy>
    <localEntry key="xquery-req">
        <x xmlns="">
  declare namespace m0="http://services.samples";
  declare variable $payload as document-node() external;
  &lt;m:getQuote xmlns:m="http://services.samples"&gt;
    &lt;m:request&gt;
      &lt;m:symbol&gt;{$payload//m0:CheckPriceRequest/m0:Code/child::text()}&lt;/m:symbol&gt;
    &lt;/m:request&gt;
  &lt;/m:getQuote&gt;
</x>
    </localEntry>
    <localEntry key="xquery-response">
        <x xmlns="">
  declare namespace m0="http://services.samples";
  declare variable $payload as document-node() external;
  declare variable $code as xs:string external;
  declare variable $price as xs:double external;
  &lt;m:CheckPriceResponse xmlns:m="http://services.samples" xmlns:m1="http://services.samples/xsd"&gt;
  	&lt;m1:Code&gt;{$code}&lt;/m1:Code&gt;
  	&lt;m1:Price&gt;{$price}&lt;/m1:Price&gt;
  &lt;/m:CheckPriceResponse&gt;
</x>
    </localEntry>
    <sequence name="fault">
        <log level="full">
            <property name="MESSAGE" value="Executing default &quot;fault&quot; sequence"/>
            <property name="ERROR_CODE" expression="get-property('ERROR_CODE')"/>
            <property name="ERROR_MESSAGE" expression="get-property('ERROR_MESSAGE')"/>
        </log>
        <drop/>
    </sequence>
    <sequence name="main">
        <log/>
        <drop/>
    </sequence>
</definitions>
